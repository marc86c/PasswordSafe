@page "/home/{Username}"
@rendermode InteractiveServer

@if (user != null)
{
    <h1>Guten Tag @user.Username</h1>
    if (newData != null)
    {
        <EditForm Model="@newData" OnValidSubmit="@(async () => await Save())" FormName="NewDataForm">
            <div>
                <input placeholder="Provider" @bind-value=newData.Provider />
                <input placeholder="username" @bind-value=newData.Username />
                <input placeholder="password" type="password" @bind-value=newData.Password />
                <button type="submit">Speichern</button>
            </div>
        </EditForm>
    }
    <button @onclick=@Add>Add +</button>
    <button @onclick=@Logout>Logout</button>
    <div>
        <h4>Daten</h4>
        @foreach (var data in user.AuthenticationDatas)
        {
            <div style="border: 1px solid black; display: inline-flex; justify-content: space-between; width: 70%" >
                <div style="display: inline-flex; justify-content: space-between;">
                    <h5>Provider</h5>
                    <input readonly @bind-value="@data.Provider"></input>
                </div>
                <div style="display: inline-flex; justify-content: space-between;">
                    <h5>Username</h5>
                    <input readonly @bind-value="@data.Username"></input>
                </div>
                <div style="display: inline-flex; justify-content: space-between;">
                    <h5>Password</h5>
                    @if(openPasswordIndex.HasValue && openPasswordIndex.Value == user.AuthenticationDatas.IndexOf(data))
                    {
                        <input readonly @bind-value="@data.Password"></input>
                        <button @onclick="@( () => OpenPassword(null))">schliessen</button>
                    }
                    else
                    {
                        <input readonly placeholder="*****"/>
                        <button @onclick="@(() => OpenPassword(user.AuthenticationDatas.IndexOf(data)))">öffnen</button>
                    }
                </div>
                <div style="display: inline-flex; justify-content: space-between;">
                    <button @onclick="@(async () => await DeleteData(user.AuthenticationDatas.IndexOf(data)))">X</button>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>loading...</p>
}

