@page "/register"
@rendermode InteractiveServer

<div style="display: flex; flex-direction: column;  align-items: center; gap: 10px;">
    <div>
    </div>

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <p style="color:red;">@ErrorMessage</p>
    }
    <h3>Register</h3>

    <EditForm Model="@registerModel" OnValidSubmit="@( async () => await HandleRegister())" FormName="RegisterForm" style="display: flex; flex-direction: column;">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>

            <div>
                <label>Username: </label>
                <InputText id="username" @bind-Value="registerModel.Username" />
            </div>
            <div>
                <label>Password: </label>
                <InputText type="password" id="password" @bind-Value="registerModel.Password" />
            </div>
        </div>
        
        <div style="display: flex; justify-content: center">
            <button type="submit">Register</button>
        </div>
    </EditForm>
    <div style="display: inline-flex; justify-content: left; gap: 5px">
        <p>Hast du bereits ein Konto?</p> <p @onclick="Login" style="text-decoration: underline;">Login</p>
    </div>
</div>
