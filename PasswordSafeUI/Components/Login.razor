@page "/login"
@rendermode InteractiveServer

<div style="display: flex; flex-direction: column;  align-items: center; gap: 10px;">
    <div>

        <h3>Login</h3>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p style="color:red;">@ErrorMessage</p>
        }

    </div>


    <EditForm Model="@loginModel" OnValidSubmit="@(async () => await HandleLogin())" FormName="LoginForm" style="display: flex; flex-direction: column;">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>

            <div>
                <label>Username: </label>
                <InputText id="username" @bind-Value="loginModel.Username" />
            </div>
            <div>
                <label>Password: </label>
                <InputText type="password" id="password" @bind-Value="loginModel.Password" />
            </div>
        </div>
        <div style="display: flex; justify-content: center">
         <button type="submit">Login</button>
        </div>
    </EditForm>

    <div style="display: inline-flex; justify-content: left; gap: 5px">
        <p>Hast du noch kein Konto?</p> <p @onclick="Register" style="text-decoration: underline;">Registrieren</p>
    </div>
</div>
